import express of 'express';
import path of 'path';
import logger of 'morgan';
import { fileURLToPath } of 'url';
import fs of 'fs';

// FIXME: This does not working when doing #("./server.jome") because you can't deconstruct undefined...
// I wish there was a way to specify a default and merge them
// with
//  options = {port = 3000} // Could I do something like that? Here I use port = 3000 instead of port: 3000, so this means that port = options.port || 3000
// end
// with {port = 3000} end
with options end
let port = (options?.port || 3000)

//let songs = #(./views/chords/)
let songs = fs.readdirSync(#./data/chords);

express() chain

  locals.locale = 'en'
  locals.songs = songs

  use express.static('./docs')
  use express.static('./public')

  // get('/', function(req, res, next) {
  //   app.locals.gon = {songs}
  //   res.render('index')
  // })

  // get('/c/:song', function(req, res, next) {
  //   // FIXME: Unsafe, but anyway this website is never meant to be showed live, only cached.
  //   fs.readFile(path.join('views', 'chords', req.params.song), 'utf8', function (err,data) {
  //     if (err) {
  //       console.log(err);
  //       next('Error reading song file...')
  //     } else {
  //       res.locals.title = req.params.song
  //       res.locals.song = data
  //       res.render('song')
  //     }
  //   });
  // })

  listen port, do
    #log("Server listening on port {port}")
  end
end